{"version":3,"file":"static/js/49.8d10991d.chunk.js","mappings":"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","sources":["components/App/App.styled.jsx","components/Forms/GeneralForm.styled.jsx","helpers/schemas/Schemas.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Modal/Modal.styled.jsx","components/EditContactForm/EditContactForm.jsx","components/Modal/Modal.jsx","components/ContactsItem/ContactsItem.styled.jsx","components/ContactsItem/ContactsItem.jsx","components/ContactsList/ContactsList.styled.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactsList.jsx","pages/ContactsPage.styled.jsx","pages/ContactsPage.jsx","redux/contacts/selectors.js","redux/filters/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding-left: 16px;\n  padding-right: 16px;\n  margin: 0 auto;\n  height: 100vh;\n\n  @media screen and (min-width: 768px) {\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-left: 40px;\n    padding-right: 40px;\n  }\n`;\n\nexport const MainContentWrap = styled.div`\n  height: auto;\n  padding-top: 50px;\n  padding-bottom: 50px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n    padding-bottom: 80px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 100px;\n    padding-bottom: 100px;\n  }\n`;\n","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const ContentWrap = styled.div`\n  position: relative;\n  top: 120px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  gap: 30px;\n`;\n\nexport const FormWrap = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 272px;\n\n  @media screen and (min-width: 375px) {\n    width: 328px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 440px;\n  }\n`;\n\nexport const InputWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin-bottom: 16px;\n  position: relative;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  > div {\n    position: absolute;\n    bottom: -16px;\n    left: 4px;\n    font-size: 10px;\n    color: #a40000;\n  }\n`;\n\nexport const InputLabel = styled.label`\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Input = styled(Field)`\n  padding: 10px;\n  background-color: transparent;\n  border: 1px solid #757473;\n  border-radius: 10px;\n  color: #c0bfbf;\n  opacity: 0.4;\n\n  @media screen and (min-width: 1280px) {\n    &:hover,\n    &:focus {\n      border-color: #7be8ea;\n      opacity: 1;\n    }\n  }\n`;\n\nexport const FormBtn = styled.button`\n  min-width: 100px;\n  margin: 0 auto;\n  margin-top: 9px;\n  padding: 10px;\n  border-radius: 10px;\n  border: 1px solid #757473;\n  font-size: 14px;\n\n  @media screen and (min-width: 1280px) {\n    &:hover,\n    &:focus {\n      border-color: #7be8ea;\n      color: #7be8ea;\n    }\n  }\n`;\n\nexport const FormTitle = styled.h3`\n  font-size: 20px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n","import * as Yup from 'yup';\n\nexport const RegisterSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'too short!')\n    .max(70, 'too long!')\n    .required('required!'),\n  email: Yup.string().email('invalid email').required('required!'),\n  password: Yup.string()\n\n    .min(6, 'password must contain at least 6 symbols!')\n    .required('required!'),\n});\n\nexport const LoginSchema = Yup.object().shape({\n  email: Yup.string().email('invalid email').required('required!'),\n  password: Yup.string()\n\n    .min(6, 'password must contain at least 6 symbols!')\n    .required('required!'),\n});\n\nexport const AddContactsSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'too short!')\n    .max(70, 'too long!')\n    .required('required!'),\n  number: Yup.string().required('required!'),\n  email: Yup.string().email(),\n  favorite: Yup.boolean(),\n});\n\nexport const EditContactsSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'too short!').max(70, 'too long!'),\n  number: Yup.string(),\n  email: Yup.string().email(),\n  favorite: Yup.boolean(),\n});\n","import { Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const ContactPageTitle = styled.h1`\n  font-size: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n  margin-bottom: 28px;\n  font-weight: 600;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n    margin-bottom: 50px;\n    gap: 8px;\n  }\n`;\n\nexport const ContactsTitle = styled.h2`\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n    margin-bottom: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 24px;\n  }\n`;\n\nexport const Box = styled.div`\n  padding-bottom: 40px;\n  border-bottom: 1px solid #757473;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    padding-bottom: 0;\n    margin: 0;\n    border-bottom: none;\n  }\n`;\n\nexport const ContactFormWrap = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 272px;\n\n  @media screen and (min-width: 375px) {\n    width: 328px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 440px;\n  }\n`;\n","import { ErrorMessage, Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\n\nimport { AddContactsSchema } from 'helpers/schemas/Schemas';\n\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\n\nimport {\n  FormBtn,\n  Input,\n  InputLabel,\n  InputWrap,\n} from 'components/Forms/GeneralForm.styled';\nimport { Box, ContactFormWrap, ContactsTitle } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n\n  const initialValues = {\n    name: '',\n    email: '',\n    number: '',\n  };\n\n  const onHandleSubmit = ({ name, number, email }) => {\n    const sameName = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (sameName) {\n      Notiflix.Notify.info(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name, number, email }));\n\n    Notiflix.Notify.info(`\n    The contact ${name} has been successfully added!`);\n  };\n\n  return (\n    <Box>\n      <ContactsTitle>Add new contact</ContactsTitle>\n\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onHandleSubmit}\n        validationSchema={AddContactsSchema}\n      >\n        <ContactFormWrap>\n          <InputWrap>\n            <InputLabel htmlFor=\"contact-name\">Name</InputLabel>\n            <Input\n              id=\"contact-name\"\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              placeholder=\"Alice\"\n            />\n\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </InputWrap>\n\n          <InputWrap>\n            <InputLabel htmlFor=\"contact-phone\">Phone</InputLabel>\n            <Input\n              id=\"contact-phone\"\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"+380\"\n              pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            />\n            <ErrorMessage name=\"number\" component=\"div\" />\n          </InputWrap>\n\n          <InputWrap>\n            <InputLabel htmlFor=\"contact-email\">Email</InputLabel>\n            <Input\n              id=\"contact-email\"\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"example@mail.com\"\n            />\n            <ErrorMessage name=\"email\" component=\"div\" />\n          </InputWrap>\n          <FormBtn type=\"submit\">Add contact</FormBtn>\n        </ContactFormWrap>\n      </Formik>\n    </Box>\n  );\n};\n","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  left: 0;\n  top: 0;\n  pointer-events: auto;\n  z-index: 999;\n  background-color: rgba(17, 18, 19, 0.4);\n`;\n\nexport const ModalWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  border-radius: 10px;\n  background-color: #6b6b6b;\n  padding: 16px;\n  width: 256px;\n\n  @media screen and (min-width: 375px) {\n    width: 310px;\n  }\n`;\n\nexport const EditModalTitle = styled.h2`\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 16px;\n`;\n\nexport const EditModalInput = styled(Field)`\n  padding: 10px;\n  background-color: transparent;\n  border: 1px solid #ffffff;\n  border-radius: 10px;\n  color: #fff;\n  opacity: 0.4;\n\n  @media screen and (min-width: 1280px) {\n    &:hover,\n    &:focus {\n      border-color: #7be8ea;\n      opacity: 1;\n    }\n  }\n`;\n\nexport const EditBtn = styled.button`\n  min-width: 100px;\n  margin: 0 auto;\n  padding: 8px;\n  border-radius: 8px;\n  border: 1px solid #ffff;\n  font-size: 14px;\n  opacity: 0.4;\n  display: block;\n\n  @media screen and (min-width: 1280px) {\n    &:hover,\n    &:focus {\n      border-color: #7be8ea;\n      opacity: 1;\n    }\n  }\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n`;\n","import { ErrorMessage, Form, Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { IoClose } from 'react-icons/io5';\nimport Notiflix from 'notiflix';\n\nimport { EditContactsSchema } from 'helpers/schemas/Schemas';\n\nimport { InputWrap } from 'components/Forms/GeneralForm.styled';\nimport {\n  CloseButton,\n  EditBtn,\n  EditModalInput,\n  EditModalTitle,\n} from 'components/Modal/Modal.styled';\n\nimport { updateContacts } from '../../redux/contacts/operations';\n\nexport const EditContactForm = ({\n  contact: { name, email, number, _id },\n  onClose,\n}) => {\n  const initialValues = {\n    name,\n    email,\n    number,\n  };\n\n  const dispatch = useDispatch();\n\n  const onHandleSubmit = editedContact => {\n    dispatch(updateContacts({ _id, editedContact }));\n\n    if (\n      name === editedContact.name &&\n      email === editedContact.email &&\n      number === editedContact.number\n    )\n      return;\n\n    Notiflix.Notify.info(`The contact has been successfuly edited!`);\n  };\n\n  return (\n    <div>\n      <EditModalTitle>Edit contact</EditModalTitle>\n\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onHandleSubmit}\n        validationSchema={EditContactsSchema}\n      >\n        <Form>\n          <InputWrap>\n            <label htmlFor=\"contact-name\">Name</label>\n            <EditModalInput\n              id=\"contact-name\"\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            />\n\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </InputWrap>\n\n          <InputWrap>\n            <label htmlFor=\"contact-phone\">Phone</label>\n            <EditModalInput\n              id=\"contact-phone\"\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            />\n\n            <ErrorMessage name=\"number\" component=\"div\" />\n          </InputWrap>\n\n          <InputWrap>\n            <label htmlFor=\"contact-email\">Email</label>\n            <EditModalInput id=\"contact-email\" type=\"email\" name=\"email\" />\n\n            <ErrorMessage name=\"email\" component=\"div\" />\n          </InputWrap>\n\n          <EditBtn type=\"submit\">Edit contact</EditBtn>\n\n          <CloseButton type=\"button\" onClick={onClose}>\n            <IoClose size={24} />\n          </CloseButton>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { EditContactForm } from 'components/EditContactForm/EditContactForm';\n\nimport { Backdrop, ModalWrap } from './Modal.styled';\n\nexport const Modal = ({ onClose, contact }) => {\n  const backdropClose = e => {\n    e.currentTarget === e.target && onClose();\n  };\n\n  const escClose = e => {\n    e.code === 'Escape' && onClose();\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', escClose);\n    return () => document.removeEventListener('keydown', escClose);\n  });\n\n  return createPortal(\n    <Backdrop onClick={backdropClose}>\n      <ModalWrap>\n        <EditContactForm contact={contact} onClose={onClose} />\n      </ModalWrap>\n    </Backdrop>,\n    document.querySelector('#modal-root')\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  border: 1px solid #757473;\n  border-radius: 8px;\n  padding: 8px;\n  position: relative;\n  /* width: 270px; */\n\n  @media screen and (min-width: 768px) {\n    width: unset;\n  }\n`;\n\nexport const ContactName = styled.p`\n  font-size: 16px;\n  color: #7be8ea;\n  margin-bottom: 4px;\n`;\n\nexport const ContactInfoWrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n\n  > a {\n    opacity: 0.5;\n\n    @media screen and (min-width: 1280px) {\n      &:hover,\n      &:focus {\n        color: #7be8ea;\n      }\n    }\n  }\n`;\n\nexport const ButtonsWrap = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 8px;\n  right: 8px;\n`;\n\nexport const ContactBtn = styled.button`\n  opacity: 0.5;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (min-width: 1280px) {\n    &:hover,\n    &:focus {\n      opacity: 1;\n      color: #7be8ea;\n    }\n  }\n`;\n","import Notiflix from 'notiflix';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\n\nimport { CiEdit } from 'react-icons/ci';\nimport { MdOutlineDelete } from 'react-icons/md';\n\nimport { deleteContacts } from '../../redux/contacts/operations';\n\nimport { Modal } from 'components/Modal/Modal';\n\nimport {\n  ButtonsWrap,\n  ContactBtn,\n  ContactInfoWrap,\n  ContactName,\n  Item,\n} from './ContactsItem.styled';\n\nexport const ContactsItem = ({ contact }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const deleteContact = ({ _id, name }) => {\n    dispatch(deleteContacts(_id));\n    Notiflix.Notify.info(`The contact ${name} has been successfully deleted!`);\n  };\n\n  const toggleModal = () => {\n    setShowModal(prev => !prev);\n  };\n\n  return (\n    <Item>\n      <ContactName>{contact.name}</ContactName>\n\n      <ContactInfoWrap>\n        <span>mobile:</span>\n        <a href={`tel: ${contact.number}`}>{contact.number}</a>\n      </ContactInfoWrap>\n\n      <ContactInfoWrap>\n        <span>email:</span>\n        <a href={`mailto:${contact.email}`}>{contact.email}</a>\n      </ContactInfoWrap>\n\n      <ButtonsWrap>\n        <ContactBtn type=\"button\" onClick={toggleModal}>\n          <CiEdit size={20} />\n        </ContactBtn>\n\n        {showModal && <Modal onClose={toggleModal} contact={contact} />}\n\n        <ContactBtn type=\"button\" onClick={() => deleteContact(contact)}>\n          <MdOutlineDelete size={20} />\n        </ContactBtn>\n      </ButtonsWrap>\n    </Item>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  width: 272px;\n\n  @media screen and (min-width: 375px) {\n    width: 328px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: unset;\n  }\n`;\n\nexport const ListWrap = styled.div`\n  padding-top: 30px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 0;\n    margin: 0;\n    width: 100%;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 30px;\n  width: 272px;\n\n  @media screen and (min-width: 375px) {\n    width: 328px;\n  }\n`;\n\nexport const FilterInput = styled.input`\n  padding: 10px;\n  outline: transparent;\n  background-color: transparent;\n  border: none;\n  border: 1px solid #757473;\n  border-radius: 10px;\n  color: #c0bfbf;\n\n  @media screen and (min-width: 1280px) {\n    &:hover {\n      border-color: #7be8ea;\n    }\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterContainer, FilterInput } from './Filter.styled';\nimport { filterContact } from '../../redux/filters/filtersSlice';\nimport { selectFilter } from '../../redux/filters/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const { filter } = useSelector(selectFilter);\n\n  const onChange = e => {\n    const { value } = e.currentTarget;\n\n    dispatch(filterContact(value));\n  };\n\n  return (\n    <FilterContainer>\n      <label htmlFor=\"filter\">Find contacts by name</label>\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        id=\"filter\"\n        value={filter}\n        onChange={onChange}\n      />\n    </FilterContainer>\n  );\n};\n","import { useSelector } from 'react-redux';\n\nimport { selectFiltredContacts } from '../../redux/contacts/selectors';\nimport { ContactsItem } from '../ContactsItem/ContactsItem';\nimport { ContactsTitle } from '../ContactForm/ContactForm.styled';\nimport { List, ListWrap } from './ContactsList.styled';\nimport { Filter } from 'components/Filter/Filter';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectFiltredContacts);\n  return (\n    <ListWrap>\n      <ContactsTitle>Contacts</ContactsTitle>\n      <Filter />\n      <List>\n        {contacts.length > 0 &&\n          contacts.map(contact => (\n            <ContactsItem key={contact._id} contact={contact} />\n          ))}\n      </List>\n    </ListWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsMainWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 60px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    gap: 100px;\n  }\n`;\n\nexport const TextNoContacts = styled.p`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TiContacts } from 'react-icons/ti';\n\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { selectContacts } from '../redux/contacts/selectors';\n\nimport { ContactPageTitle } from 'components/ContactForm/ContactForm.styled';\nimport { Container, MainContentWrap } from 'components/App/App.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\n\nimport { ContactsList } from 'components/ContactsList/ContactsList';\n\nimport { ContactsMainWrap, TextNoContacts } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <MainContentWrap>\n        <ContactPageTitle>\n          Here is your contacts\n          <TiContacts size={24} />\n        </ContactPageTitle>\n\n        <ContactsMainWrap>\n          <ContactForm />\n          {contacts && contacts.length > 0 ? (\n            <ContactsList />\n          ) : (\n            <TextNoContacts>No contacts added yet</TextNoContacts>\n          )}\n        </ContactsMainWrap>\n      </MainContentWrap>\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from '../filters/selectors';\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectIsError = state => state.contacts.error;\n\nexport const selectFiltredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const filtred = filter.toLowerCase();\n    const contactList = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filtred)\n    );\n\n    return contactList;\n  }\n);\n","export const selectFilter = state => state.filter.filter;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","MainContentWrap","_templateObject2","ContentWrap","FormWrap","Form","InputWrap","_templateObject3","InputLabel","label","_templateObject4","Input","Field","_templateObject5","FormBtn","button","_templateObject6","FormTitle","h3","_templateObject7","RegisterSchema","Yup","shape","name","min","max","required","email","password","LoginSchema","AddContactsSchema","number","favorite","EditContactsSchema","ContactPageTitle","h1","ContactsTitle","h2","Box","ContactFormWrap","ContactForm","dispatch","useDispatch","contacts","useSelector","selectContacts","_jsxs","children","_jsx","Formik","initialValues","onSubmit","_ref","some","contact","toLowerCase","Notiflix","info","concat","addContact","validationSchema","htmlFor","id","type","pattern","placeholder","ErrorMessage","component","Backdrop","ModalWrap","EditModalTitle","EditModalInput","EditBtn","CloseButton","EditContactForm","_id","onClose","editedContact","updateContacts","onClick","IoClose","size","Modal","escClose","e","code","useEffect","document","addEventListener","removeEventListener","createPortal","currentTarget","target","querySelector","Item","li","ContactName","p","ContactInfoWrap","ButtonsWrap","ContactBtn","ContactsItem","showModal","setShowModal","useState","toggleModal","prev","href","CiEdit","_ref2","deleteContacts","deleteContact","MdOutlineDelete","List","ul","ListWrap","FilterContainer","FilterInput","input","Filter","filter","selectFilter","value","onChange","filterContact","ContactsList","selectFiltredContacts","length","map","ContactsMainWrap","TextNoContacts","ContactsPage","fetchContacts","TiContacts","state","selectIsLoading","isLoading","createSelector","filtred","includes"],"sourceRoot":""}