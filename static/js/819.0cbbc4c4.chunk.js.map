{"version":3,"file":"static/js/819.0cbbc4c4.chunk.js","mappings":"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","sources":["components/App/App.styled.jsx","components/Forms/GeneralForm.styled.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","helpers/schemas/Schemas.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Modal/Modal.styled.jsx","components/EditContactForm/EditContactForm.jsx","components/Modal/Modal.jsx","components/ContactsItem/ContactsItem.styled.jsx","components/ContactsItem/ContactsItem.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","pages/ContactsPage.styled.jsx","pages/ContactsPage.jsx","redux/contacts/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding-left: 16px;\n  padding-right: 16px;\n  margin: 0 auto;\n  height: 100vh;\n\n  @media screen and (min-width: 768px) {\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-left: 40px;\n    padding-right: 40px;\n  }\n`;\n\nexport const MainContentWrap = styled.div`\n  height: auto;\n  padding-top: 50px;\n  padding-bottom: 50px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n    padding-bottom: 80px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 100px;\n    padding-bottom: 100px;\n  }\n`;\n","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const ContentWrap = styled.div`\n  position: relative;\n  top: 120px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  gap: 30px;\n`;\n\nexport const FormWrap = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 272px;\n\n  @media screen and (min-width: 375px) {\n    width: 328px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 440px;\n  }\n`;\n\nexport const InputWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin-bottom: 16px;\n  position: relative;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  > div {\n    position: absolute;\n    bottom: -16px;\n    left: 4px;\n    font-size: 10px;\n    color: #a40000;\n  }\n`;\n\nexport const InputLabel = styled.label`\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Input = styled(Field)`\n  padding: 10px;\n  background-color: transparent;\n  border: 1px solid #757473;\n  border-radius: 10px;\n  color: #c0bfbf;\n  opacity: 0.4;\n\n  &:hover,\n  &:focus {\n    border-color: #7be8ea;\n    opacity: 1;\n  }\n`;\n\nexport const FormBtn = styled.button`\n  min-width: 100px;\n  margin: 0 auto;\n  margin-top: 9px;\n  padding: 10px;\n  border-radius: 10px;\n  border: 1px solid #757473;\n  font-size: 14px;\n\n  &:hover,\n  &:focus {\n    border-color: #7be8ea;\n    color: #7be8ea;\n  }\n`;\n\nexport const FormTitle = styled.h3`\n  font-size: 20px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderContainer>\n      <ThreeDots color=\"#7be8ea;\" />\n    </LoaderContainer>\n  );\n};\n","import * as Yup from 'yup';\n\nexport const RegisterSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'too short!')\n    .max(70, 'too long!')\n    .required('required!'),\n  email: Yup.string().email('invalid email').required('required!'),\n  password: Yup.string()\n\n    .min(6, 'password must contain at least 6 symbols!')\n    .required('required!'),\n});\n\nexport const LoginSchema = Yup.object().shape({\n  email: Yup.string().email('invalid email').required('required!'),\n  password: Yup.string()\n\n    .min(6, 'password must contain at least 6 symbols!')\n    .required('required!'),\n});\n\nexport const AddContactsSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'too short!')\n    .max(70, 'too long!')\n    .required('required!'),\n  number: Yup.string().required('required!'),\n  email: Yup.string().email(),\n  favorite: Yup.boolean(),\n});\n\nexport const EditContactsSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'too short!').max(70, 'too long!'),\n  number: Yup.string(),\n  email: Yup.string().email(),\n  favorite: Yup.boolean(),\n});\n","import { Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const ContactPageTitle = styled.h1`\n  font-size: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n  margin-bottom: 28px;\n  font-weight: 600;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n    margin-bottom: 50px;\n    gap: 8px;\n  }\n`;\n\nexport const ContactsTitle = styled.h2`\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n    margin-bottom: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 24px;\n  }\n`;\n\nexport const Box = styled.div`\n  padding-bottom: 40px;\n  border-bottom: 1px solid #757473;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    padding-bottom: 0;\n    margin: 0;\n    border-bottom: none;\n  }\n`;\n\nexport const ContactFormWrap = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 272px;\n\n  @media screen and (min-width: 375px) {\n    width: 328px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 440px;\n  }\n`;\n","import { ErrorMessage, Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\n\nimport { AddContactsSchema } from 'helpers/schemas/Schemas';\n\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\n\nimport {\n  FormBtn,\n  Input,\n  InputLabel,\n  InputWrap,\n} from 'components/Forms/GeneralForm.styled';\nimport { Box, ContactFormWrap, ContactsTitle } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n\n  const initialValues = {\n    name: '',\n    email: '',\n    number: '',\n  };\n\n  const onHandleSubmit = ({ name, number, email }) => {\n    const sameName = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (sameName) {\n      Notiflix.Notify.info(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name, number, email }));\n\n    Notiflix.Notify.info(`\n    The contact ${name} has been successfully added!`);\n  };\n\n  return (\n    <Box>\n      <ContactsTitle>Add new contact</ContactsTitle>\n\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onHandleSubmit}\n        validationSchema={AddContactsSchema}\n      >\n        <ContactFormWrap>\n          <InputWrap>\n            <InputLabel htmlFor=\"contact-name\">Name</InputLabel>\n            <Input\n              id=\"contact-name\"\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              placeholder=\"Alice\"\n            />\n\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </InputWrap>\n\n          <InputWrap>\n            <InputLabel htmlFor=\"contact-phone\">Phone</InputLabel>\n            <Input\n              id=\"contact-phone\"\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"+380\"\n              pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            />\n            <ErrorMessage name=\"number\" component=\"div\" />\n          </InputWrap>\n\n          <InputWrap>\n            <InputLabel htmlFor=\"contact-email\">Email</InputLabel>\n            <Input\n              id=\"contact-email\"\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"example@mail.com\"\n            />\n            <ErrorMessage name=\"email\" component=\"div\" />\n          </InputWrap>\n          <FormBtn type=\"submit\">Add contact</FormBtn>\n        </ContactFormWrap>\n      </Formik>\n    </Box>\n  );\n};\n","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  left: 0;\n  top: 0;\n  pointer-events: auto;\n  z-index: 999;\n  background-color: rgba(17, 18, 19, 0.4);\n`;\n\nexport const ModalWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  border-radius: 10px;\n  background-color: #6b6b6b;\n  padding: 16px;\n  width: 256px;\n\n  @media screen and (min-width: 375px) {\n    width: 310px;\n  }\n`;\n\nexport const EditModalTitle = styled.h2`\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 16px;\n`;\n\nexport const EditModalInput = styled(Field)`\n  padding: 10px;\n  background-color: transparent;\n  border: 1px solid #ffffff;\n  border-radius: 10px;\n  color: #fff;\n  opacity: 0.4;\n\n  &:hover,\n  &:focus {\n    border-color: #7be8ea;\n    opacity: 1;\n  }\n`;\n\nexport const EditBtn = styled.button`\n  min-width: 100px;\n  margin: 0 auto;\n  padding: 8px;\n  border-radius: 8px;\n  border: 1px solid #ffff;\n  font-size: 14px;\n  opacity: 0.4;\n  display: block;\n\n  &:hover,\n  &:focus {\n    border-color: #7be8ea;\n    opacity: 1;\n  }\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n`;\n","import { ErrorMessage, Form, Formik } from 'formik';\n\nimport { IoClose } from 'react-icons/io5';\n\nimport { EditContactsSchema } from 'helpers/schemas/Schemas';\n\nimport { InputWrap } from 'components/Forms/GeneralForm.styled';\nimport {\n  CloseButton,\n  EditBtn,\n  EditModalInput,\n  EditModalTitle,\n} from 'components/Modal/Modal.styled';\nimport { useDispatch } from 'react-redux';\nimport { updateContacts } from '../../redux/contacts/operations';\n\nexport const EditContactForm = ({\n  contact: { name, email, number, _id },\n  onClose,\n}) => {\n  const initialValues = {\n    name,\n    email,\n    number,\n  };\n\n  const dispatch = useDispatch();\n\n  const onHandleSubmit = editedContact => {\n    dispatch(updateContacts({ _id, editedContact }));\n  };\n\n  return (\n    <div>\n      <EditModalTitle>Edit contact</EditModalTitle>\n\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onHandleSubmit}\n        validationSchema={EditContactsSchema}\n      >\n        <Form>\n          <InputWrap>\n            <label htmlFor=\"contact-name\">Name</label>\n            <EditModalInput\n              id=\"contact-name\"\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            />\n\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </InputWrap>\n\n          <InputWrap>\n            <label htmlFor=\"contact-phone\">Phone</label>\n            <EditModalInput\n              id=\"contact-phone\"\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            />\n\n            <ErrorMessage name=\"number\" component=\"div\" />\n          </InputWrap>\n\n          <InputWrap>\n            <label htmlFor=\"contact-email\">Email</label>\n            <EditModalInput id=\"contact-email\" type=\"email\" name=\"email\" />\n\n            <ErrorMessage name=\"email\" component=\"div\" />\n          </InputWrap>\n\n          <EditBtn type=\"submit\">Edit contact</EditBtn>\n\n          <CloseButton type=\"button\" onClick={onClose}>\n            <IoClose size={24} />\n          </CloseButton>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { EditContactForm } from 'components/EditContactForm/EditContactForm';\n\nimport { Backdrop, ModalWrap } from './Modal.styled';\n\nexport const Modal = ({ onClose, contact }) => {\n  const backdropClose = e => {\n    e.currentTarget === e.target && onClose();\n  };\n\n  const escClose = e => {\n    e.code === 'Escape' && onClose();\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', escClose);\n    return () => document.removeEventListener('keydown', escClose);\n  });\n\n  return createPortal(\n    <Backdrop onClick={backdropClose}>\n      <ModalWrap>\n        <EditContactForm contact={contact} onClose={onClose} />\n      </ModalWrap>\n    </Backdrop>,\n    document.querySelector('#modal-root')\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  border: 1px solid #757473;\n  border-radius: 8px;\n  padding: 8px;\n  position: relative;\n  /* width: 270px; */\n\n  @media screen and (min-width: 768px) {\n    width: unset;\n  }\n`;\n\nexport const ContactName = styled.p`\n  font-size: 16px;\n  color: #7be8ea;\n  margin-bottom: 4px;\n`;\n\nexport const ContactInfoWrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n\n  > a {\n    opacity: 0.5;\n\n    &:hover,\n    &:focus {\n      color: #7be8ea;\n    }\n  }\n`;\n\nexport const ButtonsWrap = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 8px;\n  right: 8px;\n`;\n\nexport const ContactBtn = styled.button`\n  opacity: 0.5;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n    color: #7be8ea;\n  }\n`;\n","import Notiflix from 'notiflix';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\n\nimport { CiEdit } from 'react-icons/ci';\nimport { MdOutlineDelete } from 'react-icons/md';\n\nimport { deleteContacts } from '../../redux/contacts/operations';\n\nimport { Modal } from 'components/Modal/Modal';\n\nimport {\n  ButtonsWrap,\n  ContactBtn,\n  ContactInfoWrap,\n  ContactName,\n  Item,\n} from './ContactsItem.styled';\n\nexport const ContactsItem = ({ contact }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const deleteContact = ({ _id, name }) => {\n    dispatch(deleteContacts(_id));\n    Notiflix.Notify.info(`The contact ${name} has been successfully deleted!`);\n  };\n\n  const toggleModal = () => {\n    setShowModal(prev => !prev);\n  };\n\n  return (\n    <Item>\n      <ContactName>{contact.name}</ContactName>\n\n      <ContactInfoWrap>\n        <span>mobile:</span>\n        <a href={`tel: ${contact.number}`}>{contact.number}</a>\n      </ContactInfoWrap>\n\n      <ContactInfoWrap>\n        <span>email:</span>\n        <a href={`mailto:${contact.email}`}>{contact.email}</a>\n      </ContactInfoWrap>\n\n      <ButtonsWrap>\n        <ContactBtn type=\"button\" onClick={toggleModal}>\n          <CiEdit size={20} />\n        </ContactBtn>\n\n        {showModal && <Modal onClose={toggleModal} contact={contact} />}\n\n        <ContactBtn type=\"button\" onClick={() => deleteContact(contact)}>\n          <MdOutlineDelete size={20} />\n        </ContactBtn>\n      </ButtonsWrap>\n    </Item>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  width: 272px;\n\n  @media screen and (min-width: 375px) {\n    width: 328px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: unset;\n  }\n`;\n\nexport const ListWrap = styled.div`\n  padding-top: 30px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 0;\n    margin: 0;\n    width: 100%;\n  }\n`;\n","import { useSelector } from 'react-redux';\n\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { ContactsItem } from '../ContactsItem/ContactsItem';\nimport { ContactsTitle } from '../ContactForm/ContactForm.styled';\nimport { List, ListWrap } from './ContactsList.styled';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  return (\n    <ListWrap>\n      <ContactsTitle>Contacts</ContactsTitle>\n      <List>\n        {contacts.map(contact => (\n          <ContactsItem key={contact._id} contact={contact} />\n        ))}\n      </List>\n    </ListWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsMainWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 60px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    gap: 100px;\n  }\n`;\n\nexport const TextNoContacts = styled.p`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TiContacts } from 'react-icons/ti';\n\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { selectContacts, selectIsLoading } from '../redux/contacts/selectors';\n\nimport { ContactPageTitle } from 'components/ContactForm/ContactForm.styled';\nimport { Container, MainContentWrap } from 'components/App/App.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Loader } from 'components/Loader/Loader';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\n\nimport { ContactsMainWrap, TextNoContacts } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <MainContentWrap>\n          <ContactPageTitle>\n            Here is your contacts\n            <TiContacts size={24} />\n          </ContactPageTitle>\n\n          <ContactsMainWrap>\n            <ContactForm />\n            {isLoading ? (\n              <Loader />\n            ) : contacts && contacts.length > 0 ? (\n              <ContactsList />\n            ) : (\n              <TextNoContacts>No contacts added yet</TextNoContacts>\n            )}\n          </ContactsMainWrap>\n        </MainContentWrap>\n      )}\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n","export const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectIsError = state => state.contacts.error;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","MainContentWrap","_templateObject2","ContentWrap","FormWrap","Form","InputWrap","_templateObject3","InputLabel","label","_templateObject4","Input","Field","_templateObject5","FormBtn","button","_templateObject6","FormTitle","h3","_templateObject7","LoaderContainer","Loader","_jsx","children","ThreeDots","color","RegisterSchema","Yup","shape","name","min","max","required","email","password","LoginSchema","AddContactsSchema","number","favorite","EditContactsSchema","ContactPageTitle","h1","ContactsTitle","h2","Box","ContactFormWrap","ContactForm","dispatch","useDispatch","contacts","useSelector","selectContacts","_jsxs","Formik","initialValues","onSubmit","_ref","some","contact","toLowerCase","Notiflix","info","concat","addContact","validationSchema","htmlFor","id","type","pattern","placeholder","ErrorMessage","component","Backdrop","ModalWrap","EditModalTitle","EditModalInput","EditBtn","CloseButton","EditContactForm","_id","onClose","editedContact","updateContacts","onClick","IoClose","size","Modal","escClose","e","code","useEffect","document","addEventListener","removeEventListener","createPortal","currentTarget","target","querySelector","Item","li","ContactName","p","ContactInfoWrap","ButtonsWrap","ContactBtn","ContactsItem","showModal","setShowModal","useState","toggleModal","prev","href","CiEdit","_ref2","deleteContacts","deleteContact","MdOutlineDelete","List","ul","ListWrap","ContactsList","map","ContactsMainWrap","TextNoContacts","ContactsPage","isLoading","selectIsLoading","fetchContacts","TiContacts","length","state"],"sourceRoot":""}